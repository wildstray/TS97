;***************************************
;**************************** macro list 
;***************************************
;* set_bit              dest,#mask      ;
;* clr_bit              dest,#mask      ;
;* cpl_bit              dest,#mask      ;
;* ld_mm                dst,src         ; memory to memory byte load
;* ldw_mm               dst,src         ; memory to memory word load
;* clrw                 op              ; clear word
;* cpl2_w               wr              ; 2 complement word
;* T0_start                             ;
;* T0_stop                              ;
;* rdwr_data_to_SPI                     ; r0->SPI SPI->r0
;* enable_RX_int                        ;
;* disable_RX_int                       ;
;* enable_TX_int                        ;
;* disable_TX_int                       ;
;* delay                us              ; ritardo di xxxxx us (fino 65535)
;*************************************************************************

;************************             
.macro  set_bit dest,mask                       ;\
	or      dest,#mask                      ; |
.endm                                           ; |
;************************                       ; | Bit macro
.macro  clr_bit dest,mask                       ; | with immediate
	and     dest,#~mask                     ; | mask
.endm                                           ; | 
;************************                       ; | 
.macro  cpl_bit dest,mask                       ; |
	xor     dest,#mask                      ; | 
.endm                                           ;/ 
;************************                       
.macro  ld_mm   dst,src                         ;\  Make a byte memory to
	ld      r0,src                          ; | memory load with immediate
	ld      dst,r0                          ; | address
.endm                                           ;/  
;************************                       
.macro  ldw_mm  dst,src                         ;\  Make a word memory to
	ldw     rr0,src                         ; | memory load with immediate
	ldw     dst,rr0                         ; | address
.endm                                           ;/  
;************************                       
.macro  clrw    op
	xorw    op,op
.endm
;************************                       
.macro  cpl2_w  wr                              ;\
	cpl     r#wr                            ; |
	cpl     r#(wr+1)                        ; | 2 complememt word
	incw    rr#wr                           ; |
.endm                                           ;/
;************************                       
.macro  T0_start
	pushu   PPR
	spp     #T0D_PG
	or      T_TCR,#10000000b
	popu    PPR
.endm
;************************
.macro  T0_stop
	pushu   PPR
	spp     #T0D_PG
	and     T_TCR,#01111111b
	popu    PPR
.endm
;************************
.macro  rdwr_data_to_SPI                       
	do {                                    ;\
		tm      SPICR,#10h              ; | wait SPI empty
	} while [ CLZ ]                         ; |
	ld      SPIDR,r0                        ; | r0 -> SPIDR
	nop                                     ; |
	do {                                    ; |
		tm      SPICR,#10h              ; | wait SPI empty
	} while [ CLZ ]                         ; | SPIDR -> r0
	ld      r0,SPIDR                        ;/
.endm
;************************    
.macro  enable_RX_int        
	pushu   PPR          
	spp     #SCI1_PG     
	or      S_IMR,#2     
	popu    PPR          
.endm                        
;************************    
.macro  disable_RX_int       
	pushu   PPR          
	spp     #SCI1_PG     
	and     S_IMR,#0FDh  
	popu    PPR          
.endm                        
;************************    
.macro  enable_TX_int        
	pushu   PPR          
	spp     #SCI1_PG     
	or      S_IMR,#1     
	popu    PPR          
.endm                        
;************************    
.macro  disable_TX_int       
	pushu   PPR          
	spp     #SCI1_PG     
	and     S_IMR,#0FEh  
	popu    PPR          
.endm                        
;************************    
.macro  delay   us
	pushuw  rr0
	ldw     rr0,us
	loopw [rr0] {
	   nop
	}
	popuw   rr0
.endm
;************************
;************************



